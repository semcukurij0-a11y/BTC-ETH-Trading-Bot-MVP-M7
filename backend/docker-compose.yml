version: '3.8'

services:
  crypto-trading-bot:
    build: .
    container_name: crypto-trading-bot
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      - PYTHONPATH=/app
    env_file:
      - .env
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./config.json:/app/config.json:ro
    networks:
      - crypto-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Optional: Add a database service for future use
  # postgres:
  #   image: postgres:15-alpine
  #   container_name: crypto-postgres
  #   restart: unless-stopped
  #   environment:
  #     POSTGRES_DB: crypto_trading
  #     POSTGRES_USER: ${POSTGRES_USER:-crypto_user}
  #     POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-crypto_password}
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   networks:
  #     - crypto-network

  # Optional: Add Redis for caching
  # redis:
  #   image: redis:7-alpine
  #   container_name: crypto-redis
  #   restart: unless-stopped
  #   ports:
  #     - "6379:6379"
  #   networks:
  #     - crypto-network

networks:
  crypto-network:
    driver: bridge

# volumes:
#   postgres_data:
